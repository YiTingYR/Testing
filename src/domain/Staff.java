//Sum
//V1.00 24MAR16 1152AM
package domain;

import java.io.Serializable;
import java.util.List;
//import javax.persistence.Basic;
//import javax.persistence.CascadeType;
//import javax.persistence.Column;
//import javax.persistence.Entity;
//import javax.persistence.Id;
//import javax.persistence.NamedQueries;
//import javax.persistence.NamedQuery;
//import javax.persistence.OneToMany;
//import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author Sum(Local)
 */
//@Entity
//@Table(name = "STAFF")
//@XmlRootElement
//@NamedQueries({
//    @NamedQuery(name = "Staff.findAll", query = "SELECT s FROM Staff s"),
//    @NamedQuery(name = "Staff.findByStaffid", query = "SELECT s FROM Staff s WHERE s.staffid = :staffid"),
//    @NamedQuery(name = "Staff.findByFirstname", query = "SELECT s FROM Staff s WHERE s.firstname = :firstname"),
//    @NamedQuery(name = "Staff.findByLastname", query = "SELECT s FROM Staff s WHERE s.lastname = :lastname"),
//    @NamedQuery(name = "Staff.findByGender", query = "SELECT s FROM Staff s WHERE s.gender = :gender"),
//    @NamedQuery(name = "Staff.findByStreetaddress1", query = "SELECT s FROM Staff s WHERE s.streetaddress1 = :streetaddress1"),
//    @NamedQuery(name = "Staff.findByStreetaddress2", query = "SELECT s FROM Staff s WHERE s.streetaddress2 = :streetaddress2"),
//    @NamedQuery(name = "Staff.findByCity", query = "SELECT s FROM Staff s WHERE s.city = :city"),
//    @NamedQuery(name = "Staff.findByState", query = "SELECT s FROM Staff s WHERE s.state = :state"),
//    @NamedQuery(name = "Staff.findByPosition", query = "SELECT s FROM Staff s WHERE s.position = :position"),
//    @NamedQuery(name = "Staff.findBySalary", query = "SELECT s FROM Staff s WHERE s.salary = :salary"),
//    @NamedQuery(name = "Staff.findByHomephoneno", query = "SELECT s FROM Staff s WHERE s.homephoneno = :homephoneno"),
//    @NamedQuery(name = "Staff.findByMobilephoneno", query = "SELECT s FROM Staff s WHERE s.mobilephoneno = :mobilephoneno"),
//    @NamedQuery(name = "Staff.findByEmailaddress", query = "SELECT s FROM Staff s WHERE s.emailaddress = :emailaddress")})
public class Staff implements Serializable {
    private static final long serialVersionUID = 1L;
//    @Id
//    @Basic(optional = false)
//    @Column(name = "STAFFID")
    private String staffid;
//    @Basic(optional = false)
//    @Column(name = "FIRSTNAME")
    private String firstname;
//    @Basic(optional = false)
//    @Column(name = "LASTNAME")
    private String lastname;
//    @Basic(optional = false)
//    @Column(name = "GENDER")
    private Character gender;
//    @Basic(optional = false)
//    @Column(name = "STREETADDRESS1")
    private String streetaddress1;
//    @Column(name = "STREETADDRESS2")
    private String streetaddress2;
//    @Basic(optional = false)
//    @Column(name = "CITY")
    private String city;
//    @Basic(optional = false)
//    @Column(name = "STATE")
    private String state;
//    @Basic(optional = false)
//    @Column(name = "POSITION")
    private String position;
//    @Basic(optional = false)
//    @Column(name = "SALARY")
    private double salary;
//    @Basic(optional = false)
//    @Column(name = "HOMEPHONENO")
    private String homephoneno;
//    @Basic(optional = false)
//    @Column(name = "MOBILEPHONENO")
    private String mobilephoneno;
//    @Basic(optional = false)
//    @Column(name = "EMAILADDRESS")
    private String emailaddress;
//    @OneToMany(cascade = CascadeType.ALL, mappedBy = "staffid")
    private List<Authentication> authenticationList;

    public Staff() {
    }

    public Staff(String staffid) {
        this.staffid = staffid;
    }
    
    //this is an autogenerated constructor, streetadd2 is not included because nullable, use following constructor, don't use this constructor.
    public Staff(String staffid, String firstname, String lastname, Character gender, String streetaddress1, String city, String state, String position, double salary, String homephoneno, String mobilephoneno, String emailaddress) {
        this.staffid = staffid;
        this.firstname = firstname;
        this.lastname = lastname;
        this.gender = gender;
        this.streetaddress1 = streetaddress1;
        this.city = city;
        this.state = state;
        this.position = position;
        this.salary = salary;
        this.homephoneno = homephoneno;
        this.mobilephoneno = mobilephoneno;
        this.emailaddress = emailaddress;
    }
    
    //use this constructor
    public Staff(String staffid, String firstname, String lastname, Character gender, String streetaddress1, String streetaddress2, String city, String state, String position, double salary, String homephoneno, String mobilephoneno, String emailaddress) {
        this.staffid = staffid;
        this.firstname = firstname;
        this.lastname = lastname;
        this.gender = gender;
        this.streetaddress1 = streetaddress1;
        this.streetaddress2 = streetaddress2;
        this.city = city;
        this.state = state;
        this.position = position;
        this.salary = salary;
        this.homephoneno = homephoneno;
        this.mobilephoneno = mobilephoneno;
        this.emailaddress = emailaddress;
    }

    public String getStaffid() {
        return staffid;
    }

    public void setStaffid(String staffid) {
        this.staffid = staffid;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public Character getGender() {
        return gender;
    }

    public void setGender(Character gender) {
        this.gender = gender;
    }

    public String getStreetaddress1() {
        return streetaddress1;
    }

    public void setStreetaddress1(String streetaddress1) {
        this.streetaddress1 = streetaddress1;
    }

    public String getStreetaddress2() {
        return streetaddress2;
    }

    public void setStreetaddress2(String streetaddress2) {
        this.streetaddress2 = streetaddress2;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public String getHomephoneno() {
        return homephoneno;
    }

    public void setHomephoneno(String homephoneno) {
        this.homephoneno = homephoneno;
    }

    public String getMobilephoneno() {
        return mobilephoneno;
    }

    public void setMobilephoneno(String mobilephoneno) {
        this.mobilephoneno = mobilephoneno;
    }

    public String getEmailaddress() {
        return emailaddress;
    }

    public void setEmailaddress(String emailaddress) {
        this.emailaddress = emailaddress;
    }

    @XmlTransient
    public List<Authentication> getAuthenticationList() {
        return authenticationList;
    }

    public void setAuthenticationList(List<Authentication> authenticationList) {
        this.authenticationList = authenticationList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (staffid != null ? staffid.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Staff)) {
            return false;
        }
        Staff other = (Staff) object;
        if ((this.staffid == null && other.staffid != null) || (this.staffid != null && !this.staffid.equals(other.staffid))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "domain.Staff[ staffid=" + staffid + " ]";
    }
    
}
